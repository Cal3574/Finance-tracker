
generator client {
  provider = "prisma-client-js"
}
datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
}
model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  password  String?
  savings   Savings[]
  goals     Goals[]
  spenings  Spendings[]
}
model Savings {
  id        Int      @id @default(autoincrement())
  amount    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
}
model Goals {
  id        Int      @id @default(autoincrement())
  amount    Int
  goalName  String
  startDate DateTime
  endDate   DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
}
model Spendings {
  id        Int      @id @default(autoincrement())
  amount    Int  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  location String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  categoryId Int
  category  Categories @relation(fields: [categoryId], references: [id])
  
}
model Categories {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  spenings  Spendings[]
}